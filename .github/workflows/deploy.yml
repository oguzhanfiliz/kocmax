name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: Add server to known hosts
      run: |
        echo "SSH Host: ${{ secrets.SSH_HOST }}"
        echo "SSH Port: ${{ secrets.SSH_PORT }}"
        ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        
    - name: Test SSH connection
      run: |
        ssh -p ${{ secrets.SSH_PORT }} -o ConnectTimeout=10 ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} 'echo "SSH connection successful"'
        
    - name: Deploy to server
      run: |
        ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd /home/mutfakyapimnet/b2bb2c.mutfakyapim.net
          # Git pull - ignore local changes and force sync with remote
          git fetch origin
          git reset --hard origin/main
     
          
          # .env dosyasını kopyala
          cp .env.production .env
          
          # .env dosyasını düzenle
          sed -i 's/^APP_URL=.*/APP_URL=https:\/\/b2bb2c.mutfakyapim.net/' .env
          sed -i 's/^DB_CONNECTION=.*/DB_CONNECTION=mysql/' .env
          sed -i 's/^DB_DATABASE=.*/DB_DATABASE=mutfakyapimnet_b2bb2c/' .env
          sed -i 's/^DB_USERNAME=.*/DB_USERNAME=mutfakyapimnet_b2bb2c/' .env
          sed -i 's/^DB_PASSWORD=.*/DB_PASSWORD=MUep6BUvBajj/' .env
          sed -i 's/^EXCHANGE_RATE_PROVIDER=.*/EXCHANGE_RATE_PROVIDER=tcmb/' .env
          sed -i 's/^EMAIL_VERIFICATION_ENABLED=.*/EMAIL_VERIFICATION_ENABLED=false/' .env
          sed -i 's/^APP_DEBUG=.*/APP_DEBUG=true/' .env
          # Domain ve CORS ayarları - Tek yerden yönetim
          sed -i 's/^CORS_ALLOWED_ORIGINS=.*/CORS_ALLOWED_ORIGINS="http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,https://b2bb2c.mutfakyapim.net"/' .env
          sed -i 's/^SANCTUM_STATEFUL_DOMAINS=.*/SANCTUM_STATEFUL_DOMAINS="localhost,localhost:3000,127.0.0.1,127.0.0.1:3000,b2bb2c.mutfakyapim.net"/' .env
          sed -i 's/^FRONTEND_URL=.*/FRONTEND_URL="https://b2bb2c.mutfakyapim.net"/' .env
          
          # API Domain Protection (Development için false, Production için gerektiğinde true)
          sed -i 's/^DOMAIN_PROTECTION_ENABLED=.*/DOMAIN_PROTECTION_ENABLED=false/' .env
          sed -i 's/^ALLOWED_DOMAINS=.*/ALLOWED_DOMAINS="localhost:3000,localhost:5173,127.0.0.1:3000,b2bb2c.mutfakyapim.net"/' .env
          
          # Production specific domains varsa ekle
          echo "PRODUCTION_DOMAINS=\"b2bb2c.mutfakyapim.net,www.b2bb2c.mutfakyapim.net,*.mutfakyapim.net\"" >> .env
          
          # Debug true kalacak, değiştirme
          # Composer dependencies güncelle
          composer install --no-interaction
          # Key generate
          php artisan key:generate --force --no-interaction

          # Laravel cache temizle ve yeniden oluştur
          php artisan config:clear
          php artisan config:cache
          php artisan route:clear
          php artisan route:cache
          php artisan view:clear
          php artisan view:cache
          
          # Database migrations çalıştır (eğer varsa)
          php artisan migrate:fresh --seed
          php artisan shield:generate --all --panel=admin
          php artisan db:seed --class=PermissionSeederForAdminRole
          php artisan shield:super-admin --user=1 --panel=admin
          

          chown -R mutfakyapimnet:mutfakyapimnet /home/mutfakyapimnet/b2bb2c.mutfakyapim.net/storage/api-docs && chmod 775 /home/mutfakyapimnet/b2bb2c.mutfakyapim.net/storage/api-docs && chmod 664 /home/mutfakyapimnet/b2bb2c.mutfakyapim.net/storage/api-docs/api-docs.json
          # Storage link oluştur (eğer yoksa)
          php artisan storage:link
          
          # Dosya sahipliğini ve izinlerini düzenle
          chown -R mutfakyapimnet:mutfakyapimnet .
          find . -type f -exec chmod 644 {} \;
          find . -type d -exec chmod 755 {} \;
          
          # Storage ve cache dizinleri için özel izinler
          chmod -R 775 storage
          chmod -R 775 bootstrap/cache
          
          # NPM dependencies (eğer frontend assets varsa)
          npm ci
          npm run build
          
          # Maintenance mode kapat
          php artisan up
          
          echo "Deploy completed successfully!"
        EOF