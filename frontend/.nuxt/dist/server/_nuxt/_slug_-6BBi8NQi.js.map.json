{"file":"_slug_-6BBi8NQi.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,UAAM,QAAQ,SAAA;AACd,UAAM,gBAAgB,iBAAA;AAGD,UAAM,OAAO;AAGlC,UAAM,eAAe,IAAY,EAAE;AACnC,UAAM,sBAAsB,IAAY,EAAE;AAsC1C,UAAM,MAAM,MAAM,OAAO,MAAM,OAAO,YAAY;AAChD,UAAI,SAAS;AAEX,qBAAa,QAAQ;AACrB,4BAAoB,QAAQ;AAE5B,mBAAW,aAAa,cAAc,gBAAgB;AACpD,cAAI,UAAU,UAAU;AACtB,kBAAM,cAAc,UAAU,SAAS;AAAA,cAAK,CAAA,UAC1C,MAAM,SAAS,WACf,MAAM,KAAK,YAAA,EAAc,QAAQ,cAAc,GAAG,EAAE,QAAQ,OAAO,GAAG,MAAM;AAAA,YAAA;AAE9E,gBAAI,aAAa;AACf,2BAAa,QAAQ,YAAY;AACjC,kCAAoB,QAAQ,YAAY,eAAe,GAAG,YAAY,IAAI;AAC1E;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAGD,eAAW;AAAA,MACT,OAAO,SAAS,MAAM,aAAa,QAAQ,GAAG,aAAa,KAAK,oBAAoB,sBAAsB;AAAA,MAC1G,aAAa,SAAS,MAAM,oBAAoB,SAAS,kCAAkC;AAAA,IAAA,CAC5F;;;;;;QAtFM,OAAOA,MAAA,YAAA,KAAY;AAAA,QACnB,UAAUA,MAAA,mBAAA,KAAmB;AAAA,MAAA;;;;;;;;;;;;","names":["_unref"],"sources":["../../../../pages/alt-kategori/[slug].vue"],"sourcesContent":["<template>\n  <div>\n    <!-- breadcrumb start -->\n    <breadcrumb-1 \n      :title=\"categoryName || 'Alt Kategori'\" \n      :subtitle=\"categoryDescription || 'Alt Kategori Ürünleri'\" \n    />\n    <!-- breadcrumb end -->\n\n    <!-- shop area start -->\n    <shop-area/>\n    <!-- shop area end -->\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useCategoryStore } from \"@/pinia/useCategoryStore\";\n\nconst route = useRoute();\nconst categoryStore = useCategoryStore();\n\n// Get category slug from route\nconst categorySlug = route.params.slug as string;\n\n// Reactive category data\nconst categoryName = ref<string>('');\nconst categoryDescription = ref<string>('');\n\n// Load categories and find current category\nonMounted(async () => {\n  if (!categoryStore.hasCategories) {\n    await categoryStore.fetchCategoriesWithChildren();\n  }\n  \n  // Find sub-category by slug in all parent categories\n  for (const parentCat of categoryStore.rootCategories) {\n    if (parentCat.children) {\n      const subCategory = parentCat.children.find(child => \n        child.slug === categorySlug || \n        child.name.toLowerCase().replace(/[^a-z0-9]/g, \"-\").replace(/-+/g, \"-\") === categorySlug\n      );\n      if (subCategory) {\n        categoryName.value = subCategory.name;\n        categoryDescription.value = subCategory.description || `${subCategory.name} Alt Kategorisi`;\n        break;\n      }\n    }\n  }\n  \n  // If not found in sub-categories, check main categories as fallback\n  if (!categoryName.value) {\n    const category = categoryStore.categories.find(cat => \n      cat.slug === categorySlug || \n      cat.name.toLowerCase().replace(/[^a-z0-9]/g, \"-\").replace(/-+/g, \"-\") === categorySlug\n    );\n    \n    if (category) {\n      categoryName.value = category.name;\n      categoryDescription.value = category.description || `${category.name} Kategorisi`;\n    }\n  }\n});\n\n// Watch for route changes\nwatch(() => route.params.slug, async (newSlug) => {\n  if (newSlug) {\n    // Re-find sub-category when slug changes\n    categoryName.value = '';\n    categoryDescription.value = '';\n    \n    for (const parentCat of categoryStore.rootCategories) {\n      if (parentCat.children) {\n        const subCategory = parentCat.children.find(child => \n          child.slug === newSlug || \n          child.name.toLowerCase().replace(/[^a-z0-9]/g, \"-\").replace(/-+/g, \"-\") === newSlug\n        );\n        if (subCategory) {\n          categoryName.value = subCategory.name;\n          categoryDescription.value = subCategory.description || `${subCategory.name} Alt Kategorisi`;\n          break;\n        }\n      }\n    }\n  }\n});\n\n// SEO Meta\nuseSeoMeta({ \n  title: computed(() => categoryName.value ? `${categoryName.value} - Alt Kategori` : 'Alt Kategori Sayfası'),\n  description: computed(() => categoryDescription.value || 'Alt kategori ürünlerini keşfedin')\n});\n</script>\n\n"],"version":3}