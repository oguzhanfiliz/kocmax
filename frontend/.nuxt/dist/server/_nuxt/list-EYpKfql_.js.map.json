{"file":"list-EYpKfql_.js","mappings":"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","names":["_ssrRenderAttrs","_mergeProps","_unref","_ssrRenderAttr","_ssrRenderClass","_ssrRenderList","_ssrInterpolate","_push","_parent","_createVNode","_createTextVNode","_toDisplayString"],"sources":["../../../../components/shop/sidebar/price-filter.vue","../../../../components/shop/sidebar/filter-status.vue","../../../../components/shop/sidebar/filter-categories.vue","../../../../components/svg/rating.vue","../../../../components/shop/sidebar/top-product.vue","../../../../components/svg/grid.vue","../../../../components/svg/list.vue"],"sourcesContent":["<template>\n  <div class=\"tp-shop-widget-content\">\n    <div class=\"tp-shop-widget-filter price__slider\">\n      <!-- Price Range Slider -->\n      <div id=\"slider-range\" class=\"mb-15\">\n        <Slider :value=\"priceValues\" :tooltips=\"false\" @change=\"handlePriceChange\"\n          :max=\"maxPrice\" />\n      </div>\n      \n      <!-- Min/Max Inputs -->\n      <div class=\"tp-price-input-wrapper d-flex gap-3 mb-15\">\n        <div class=\"tp-price-input-group flex-fill\">\n          <label class=\"tp-price-input-label\">Min Fiyat</label>\n          <div class=\"tp-price-input-container\">\n            <span class=\"tp-price-input-currency\">₺</span>\n            <input \n              v-model.number=\"minInputValue\"\n              @blur=\"handleMinInputChange\"\n              @keyup.enter=\"handleMinInputChange\"\n              type=\"number\" \n              class=\"tp-price-input\" \n              :min=\"0\" \n              :max=\"maxPrice\"\n              placeholder=\"0\"\n            />\n          </div>\n        </div>\n        <div class=\"tp-price-input-group flex-fill\">\n          <label class=\"tp-price-input-label\">Max Fiyat</label>\n          <div class=\"tp-price-input-container\">\n            <span class=\"tp-price-input-currency\">₺</span>\n            <input \n              v-model.number=\"maxInputValue\"\n              @blur=\"handleMaxInputChange\"\n              @keyup.enter=\"handleMaxInputChange\"\n              type=\"number\" \n              class=\"tp-price-input\" \n              :min=\"0\" \n              :max=\"maxPrice\"\n              placeholder=\"10000\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <!-- Filter Info and Button -->\n      <div class=\"tp-shop-widget-filter-info d-flex align-items-center justify-content-between\">\n        <span class=\"input-range\">\n          ₺{{ priceValues[0] }} - ₺{{ priceValues[1] }}\n        </span>\n        <button @click=\"handlePrice\" class=\"tp-shop-widget-filter-btn\" type=\"button\">\n          Filtrele\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Slider from \"@vueform/slider\";\nimport \"@vueform/slider/themes/default.css\";\nimport { useProductFilterStore } from \"@/pinia/useProductFilterStore\";\nimport { useProductStore } from \"@/pinia/useProductStore\";\n\nconst store = useProductFilterStore();\nconst productStore = useProductStore();\nconst router = useRouter();\nconst route = useRoute();\n\n// Sabit max price\nconst maxPrice = ref(10000);\n\n// Dynamic price values based on API products\nconst priceValues = ref([0, maxPrice.value]);\n\n// Input values for manual entry\nconst minInputValue = ref(0);\nconst maxInputValue = ref(maxPrice.value);\n\n// Handle price change from slider\nconst handlePriceChange = (value: number[]) => {\n  priceValues.value = value;\n  minInputValue.value = value[0];\n  maxInputValue.value = value[1];\n};\n\n// Handle min input change\nconst handleMinInputChange = () => {\n  if (minInputValue.value < 0) minInputValue.value = 0;\n  if (minInputValue.value > maxInputValue.value) minInputValue.value = maxInputValue.value;\n  priceValues.value = [minInputValue.value, maxInputValue.value];\n};\n\n// Handle max input change\nconst handleMaxInputChange = () => {\n  if (maxInputValue.value > maxPrice.value) maxInputValue.value = maxPrice.value;\n  if (maxInputValue.value < minInputValue.value) maxInputValue.value = minInputValue.value;\n  priceValues.value = [minInputValue.value, maxInputValue.value];\n};\n\nonMounted(() => {\n  if (route.query.minPrice && route.query.maxPrice) {\n    const minPrice = Number(route.query.minPrice);\n    const maxPriceValue = Number(route.query.maxPrice);\n    priceValues.value = [minPrice, maxPriceValue];\n    minInputValue.value = minPrice;\n    maxInputValue.value = maxPriceValue;\n  }\n});\n\n// Watch for price values changes to sync inputs\nwatch(priceValues, (newValues) => {\n  minInputValue.value = newValues[0];\n  maxInputValue.value = newValues[1];\n});\n\nfunction handlePrice() {\n  const price_query = {\n    minPrice: priceValues.value[0],\n    maxPrice: priceValues.value[1],\n  };\n\n  // Merge existing query parameters with the new price query\n  router.push({\n    path: router.currentRoute.value.path,\n    query: {\n      ...router.currentRoute.value.query,\n      ...price_query,\n    },\n  });\n}\n\n</script>\n\n<style scoped>\n.tp-price-input-wrapper {\n  margin-bottom: 15px;\n}\n\n.tp-price-input-group {\n  flex: 1;\n}\n\n.tp-price-input-label {\n  display: block;\n  font-size: 12px;\n  font-weight: 500;\n  color: #55585b;\n  margin-bottom: 5px;\n}\n\n.tp-price-input-container {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.tp-price-input-currency {\n  position: absolute;\n  left: 12px;\n  font-size: 14px;\n  color: #55585b;\n  z-index: 1;\n}\n\n.tp-price-input {\n  width: 100%;\n  padding: 8px 12px 8px 25px;\n  border: 1px solid #e1e5e9;\n  border-radius: 6px;\n  font-size: 14px;\n  color: #010f1c;\n  background-color: #fff;\n  transition: border-color 0.3s ease;\n}\n\n.tp-price-input:focus {\n  outline: none;\n  border-color: #ff6b35;\n  box-shadow: 0 0 0 2px rgba(255, 107, 53, 0.1);\n}\n\n.tp-price-input::placeholder {\n  color: #9ca3af;\n}\n\n/* Remove spinner from number inputs */\n.tp-price-input::-webkit-outer-spin-button,\n.tp-price-input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n.tp-price-input[type=number] {\n  -moz-appearance: textfield;\n}\n</style>\n","<template>\n  <div class=\"tp-shop-widget-content\">\n    <div class=\"tp-shop-widget-checkbox\">\n      <ul class=\"filter-items filter-checkbox\">\n        <li v-for=\"(s, i) in status\" :key=\"i\" class=\"filter-item checkbox\">\n          <input id=\"on-sale\" type=\"checkbox\" name=\"on-sale\" />\n          <label @click=\"handleStatus(s)\" :for=\"s\" :class=\"`${route.query?.status === formatString(s) ? 'active': ''}`\"> \n            {{ s }} \n          </label>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { formatString } from \"@/utils/index\";\nconst route = useRoute();\nconst router = useRouter();\nconst status = ref<string[]>([\"İndirimde\", \"Stokta\"]);\n\nfunction handleStatus(status: string) {\n  router.push({\n    query: {\n      ...router.currentRoute.value.query,\n      status: router.currentRoute.value.query.status\n        ? router.currentRoute.value.query.status.includes(status)\n          ? (router.currentRoute.value.query.status as string)\n            .split(\",\")\n            .filter((item: string) => item !== status)\n            .join(\",\")\n          : formatString(status)\n        : formatString(status)\n    }\n  });\n}\n</script>\n","<template>\r\n  <div class=\"tp-shop-widget-content\">\r\n    <div class=\"tp-shop-widget-categories\">\r\n      <!-- Loading State -->\r\n      <div v-if=\"categoryStore.isLoading\" class=\"text-center py-3\">\r\n        <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n          <span class=\"visually-hidden\">Yükleniyor...</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Categories List -->\r\n      <ul v-else-if=\"categoryStore.categories.length > 0\">\r\n        <li v-for=\"category in categoryStore.categories.slice(0, 10)\" :key=\"category.id\">\r\n          <a\r\n            @click.prevent=\"handleCategory(category)\"\r\n            :class=\"`cursor-pointer ${\r\n              isActiveCategorySlug(category.slug) ? 'active' : ''\r\n            }`\"\r\n          >\r\n            {{ category.name }}\r\n            <span v-if=\"category.products_count\">{{ category.products_count }}</span>\r\n          </a>\r\n\r\n          <!-- Alt kategoriler varsa göster -->\r\n          <ul v-if=\"category.children && category.children.length > 0\" class=\"tp-shop-widget-subcategories\">\r\n            <li v-for=\"subCategory in category.children.slice(0, 5)\" :key=\"subCategory.id\">\r\n              <a\r\n                @click.prevent=\"handleCategory(subCategory)\"\r\n                :class=\"`cursor-pointer ${\r\n                  isActiveCategorySlug(subCategory.slug) ? 'active' : ''\r\n                }`\"\r\n              >\r\n                {{ subCategory.name }}\r\n                <span v-if=\"subCategory.products_count\">{{ subCategory.products_count }}</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n\r\n      <!-- No Categories -->\r\n      <div v-else class=\"text-center py-3\">\r\n        <p class=\"text-muted small\">Kategori bulunamadı</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { useCategoryStore } from '@/pinia/useCategoryStore';\r\n\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst categoryStore = useCategoryStore();\r\n\r\n// Kategorileri yükle\r\nonMounted(async () => {\r\n  if (!categoryStore.hasCategories && !categoryStore.isLoading) {\r\n    await categoryStore.fetchCategoriesWithChildren();\r\n  }\r\n});\r\n\r\n// Aktif kategoriyi kontrol et\r\nconst isActiveCategorySlug = (slug: string): boolean => {\r\n  return (\r\n    route.query.category === slug ||\r\n    route.query.subCategory === slug ||\r\n    (route.params.slug === slug && (route.path.startsWith('/kategori/') || route.path.startsWith('/alt-kategori/')))\r\n  );\r\n};\r\n\r\n// Kategori seçim işlemi\r\nfunction handleCategory(category: any) {\r\n  // Kategori sayfasına yönlendir\r\n  router.push({\r\n    path: `/kategori/${category.slug}`,\r\n    query: {\r\n      // Mevcut diğer filtreleri koru (fiyat, marka, vb.)\r\n      ...(route.query.minPrice && { minPrice: route.query.minPrice }),\r\n      ...(route.query.maxPrice && { maxPrice: route.query.maxPrice }),\r\n      ...(route.query.brand && { brand: route.query.brand }),\r\n      ...(route.query.status && { status: route.query.status }),\r\n      ...(route.query.gender && { gender: route.query.gender }),\r\n      ...(route.query.sort && { sort: route.query.sort }),\r\n    }\r\n  });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Alt kategoriler için container */\r\n.tp-shop-widget-subcategories {\r\n  margin-left: 20px;\r\n  margin-top: 8px;\r\n  border-left: 2px solid #f0f0f0;\r\n  padding-left: 15px; /* 10px'den 15px'e çıkarıldı */\r\n}\r\n\r\n.tp-shop-widget-subcategories li {\r\n  margin-bottom: 5px;\r\n  position: relative; /* Alt kategori li elementine position ver */\r\n}\r\n\r\n.tp-shop-widget-subcategories a {\r\n  font-size: 13px;\r\n  color: #666;\r\n  /*padding: 3px 5px 3px 0; /* Sol padding kaldırıldı, sağ padding eklendi */\r\n  position: relative; /* Link elementine position ver */\r\n  z-index: 2; /* Text'in üstte olması için z-index */\r\n  display: block; /* Block yaparak tam kontrol */\r\n  margin-left: 2px; /* Ekstra sağa kaydırma */\r\n}\r\n\r\n.tp-shop-widget-subcategories a:hover,\r\n.tp-shop-widget-subcategories a.active {\r\n  color: #ff6b35;\r\n}\r\n\r\n/* Ana kategori linklerinde de aynı sorunu önle */\r\n.tp-shop-widget-categories > ul > li > a {\r\n  position: relative;\r\n  z-index: 2;\r\n  display: block;\r\n}\r\n\r\n/* ::after pseudo elementini kontrol et */\r\n.tp-shop-widget-categories ul li a::after {\r\n  z-index: 1 !important; /* Pseudo element'i arkada tut */\r\n  position: absolute !important;\r\n}\r\n\r\n/* Alt kategori ::after kontrolü */\r\n.tp-shop-widget-subcategories a::after {\r\n  z-index: 1 !important;\r\n  position: absolute !important;\r\n}\r\n\r\n.spinner-border-sm {\r\n  width: 1rem;\r\n  height: 1rem;\r\n}\r\n\r\n/* Global CSS override - eğer gerekirse */\r\n:deep(.tp-shop-widget-categories ul li a::after) {\r\n  z-index: 1;\r\n  position: absolute;\r\n}\r\n\r\n:deep(.tp-shop-widget-categories ul li a) {\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n</style>\r\n","<template>\r\n  <svg\r\n    width=\"12\"\r\n    height=\"12\"\r\n    viewBox=\"0 0 12 12\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M6 0L7.854 3.756L12 4.362L9 7.284L9.708 11.412L6 9.462L2.292 11.412L3 7.284L0 4.362L4.146 3.756L6 0Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n</template>\r\n","<template>\r\n  <div class=\"tp-shop-widget-content\">\r\n    <!-- Loading State -->\r\n    <div v-if=\"isLoading\" class=\"tp-shop-widget-product\">\r\n      <div v-for=\"i in 4\" :key=\"`skeleton-${i}`\" class=\"tp-shop-widget-product-item d-flex align-items-center mb-3\">\r\n        <div class=\"tp-shop-widget-product-thumb\">\r\n          <div class=\"skeleton-thumb\"></div>\r\n        </div>\r\n        <div class=\"tp-shop-widget-product-content\">\r\n          <div class=\"skeleton-rating mb-2\"></div>\r\n          <div class=\"skeleton-title mb-2\"></div>\r\n          <div class=\"skeleton-price\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Products List -->\r\n    <div v-else class=\"tp-shop-widget-product\">\r\n      <div v-for=\"item in topRatedProducts\" :key=\"item.id\" class=\"tp-shop-widget-product-item d-flex align-items-center\">\r\n        <div class=\"tp-shop-widget-product-thumb\">\r\n          <nuxt-link :href=\"`/product-details/${item.id}`\">\r\n            <img :src=\"getProductImage(item)\" :alt=\"item.name\" @error=\"handleImageError\" />\r\n          </nuxt-link>\r\n        </div>\r\n        <div class=\"tp-shop-widget-product-content\">\r\n          <div class=\"tp-shop-widget-product-rating-wrapper d-flex align-items-center\">\r\n            <div class=\"tp-shop-widget-product-rating\">\r\n              <span v-for=\"star in 5\" :key=\"star\" :class=\"{ 'filled': star <= item.averageRating }\">\r\n                <svg-rating />\r\n              </span>\r\n            </div>\r\n            <div class=\"tp-shop-widget-product-rating-number\">\r\n              <span>({{ item.averageRating.toFixed(1) }})</span>\r\n            </div>\r\n          </div>\r\n          <h4 class=\"tp-shop-widget-product-title\">\r\n            <nuxt-link :href=\"`/product-details/${item.id}`\">{{ item.name }}</nuxt-link>\r\n          </h4>\r\n          <div class=\"tp-shop-widget-product-price-wrapper\">\r\n            <span class=\"tp-shop-widget-product-price\">{{ getFormattedPrice(item.price) }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- No Products Message -->\r\n      <div v-if=\"!isLoading && topRatedProducts.length === 0\" class=\"text-center py-3\">\r\n        <p class=\"text-muted small\">Henüz değerlendirme yapılmamış.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { apiService } from '@/services/api';\r\nimport { getCachedData, setCachedData } from '@/utils/cache';\r\n\r\n// API Product interface\r\ninterface ApiProduct {\r\n  id: number;\r\n  name: string;\r\n  slug: string;\r\n  price: {\r\n    original: number;\r\n    converted: number;\r\n    currency: string;\r\n    formatted: string;\r\n  };\r\n  images: Array<{\r\n    id: number;\r\n    image_url: string;\r\n    alt_text: string | null;\r\n    is_primary: boolean;\r\n  }>;\r\n  averageRating?: number;\r\n  reviewCount?: number;\r\n  in_stock: boolean;\r\n}\r\n\r\n// State\r\nconst topRatedProducts = ref<ApiProduct[]>([]);\r\nconst isLoading = ref<boolean>(false);\r\n\r\n// Ürün resmi alma fonksiyonu\r\nconst getProductImage = (product: ApiProduct): string => {\r\n  if (product.images && product.images.length > 0) {\r\n    const primaryImage = product.images.find((img) => img.is_primary === true);\r\n    if (primaryImage) {\r\n      return primaryImage.image_url;\r\n    }\r\n    return product.images[0].image_url;\r\n  }\r\n  return '/img/product/product-1.jpg';\r\n};\r\n\r\n// Fiyat formatı\r\nconst getFormattedPrice = (price: any): string => {\r\n  if (typeof price === 'object' && price?.formatted) {\r\n    return price.formatted;\r\n  }\r\n  if (typeof price === 'number') {\r\n    return `${price.toLocaleString('tr-TR')} ₺`;\r\n  }\r\n  return '0 ₺';\r\n};\r\n\r\n// Resim hata yönetimi\r\nconst handleImageError = (event: Event) => {\r\n  const img = event.target as HTMLImageElement;\r\n  img.src = '/img/product/product-1.jpg';\r\n};\r\n\r\n// En çok beğenilen ürünleri getir\r\nconst fetchTopRatedProducts = async () => {\r\n  isLoading.value = true;\r\n\r\n  try {\r\n    // Önce cache'den kontrol et (1 saat cache)\r\n    const cached = getCachedData('top_rated_products');\r\n    if (cached) {\r\n      topRatedProducts.value = cached;\r\n      isLoading.value = false;\r\n      return;\r\n    }\r\n\r\n    // API'den ürünleri al\r\n    const response = await apiService.getProducts({\r\n      per_page: 20, // Daha fazla ürün al, sonra filtrele\r\n      currency: 'TRY'\r\n    });\r\n\r\n    if (response && response.data) {\r\n      // Ürünlere rastgele rating ekle (API'de rating yoksa)\r\n      const productsWithRating = response.data.map((product: any) => ({\r\n        ...product,\r\n        averageRating: Math.random() * (5 - 3) + 3, // 3-5 arası rastgele rating\r\n        reviewCount: Math.floor(Math.random() * 50) + 1 // 1-50 arası review sayısı\r\n      }));\r\n\r\n      // Yıldız sayısına göre sırala ve ilk 4'ünü al\r\n      const sortedProducts = productsWithRating\r\n        .filter((product: ApiProduct) => product.averageRating && product.averageRating >= 4) // 4+ yıldızlı olanları filtrele\r\n        .sort((a: ApiProduct, b: ApiProduct) => (b.averageRating || 0) - (a.averageRating || 0))\r\n        .slice(0, 4);\r\n\r\n      // Eğer 4+ yıldızlı ürün yoksa, herhangi 4 ürünü al\r\n      topRatedProducts.value = sortedProducts.length >= 4 \r\n        ? sortedProducts \r\n        : productsWithRating.slice(0, 4);\r\n\r\n      // 1 saat cache'le\r\n      setCachedData('top_rated_products', topRatedProducts.value, 60 * 60 * 1000);\r\n    }\r\n  } catch (error) {\r\n    console.warn('En çok beğenilen ürünler yüklenemedi:', error);\r\n    // Hata durumunda boş array\r\n    topRatedProducts.value = [];\r\n  } finally {\r\n    isLoading.value = false;\r\n  }\r\n};\r\n\r\n// Component mount olduğunda ürünleri yükle\r\nonMounted(() => {\r\n  fetchTopRatedProducts();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* Skeleton Loading Styles */\r\n.skeleton-thumb {\r\n  width: 60px;\r\n  height: 60px;\r\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\r\n  background-size: 200% 100%;\r\n  animation: skeleton-shimmer 1.5s infinite;\r\n  border-radius: 4px;\r\n}\r\n\r\n.skeleton-rating {\r\n  width: 80px;\r\n  height: 12px;\r\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\r\n  background-size: 200% 100%;\r\n  animation: skeleton-shimmer 1.5s infinite;\r\n  border-radius: 4px;\r\n}\r\n\r\n.skeleton-title {\r\n  width: 120px;\r\n  height: 14px;\r\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\r\n  background-size: 200% 100%;\r\n  animation: skeleton-shimmer 1.5s infinite;\r\n  border-radius: 4px;\r\n}\r\n\r\n.skeleton-price {\r\n  width: 60px;\r\n  height: 12px;\r\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\r\n  background-size: 200% 100%;\r\n  animation: skeleton-shimmer 1.5s infinite;\r\n  border-radius: 4px;\r\n}\r\n\r\n@keyframes skeleton-shimmer {\r\n  0% {\r\n    background-position: 200% 0;\r\n  }\r\n  100% {\r\n    background-position: -200% 0;\r\n  }\r\n}\r\n\r\n/* Filled yıldızlar için stil */\r\n.tp-shop-widget-product-rating span.filled {\r\n  color: #ffb21d;\r\n}\r\n\r\n.tp-shop-widget-product-rating span:not(.filled) {\r\n  color: #e5e5e5;\r\n}\r\n\r\n/* Widget thumb boyutu */\r\n.tp-shop-widget-product-thumb img {\r\n  width: 60px;\r\n  height: 60px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n","<template>\r\n  <svg\r\n    width=\"18\"\r\n    height=\"18\"\r\n    viewBox=\"0 0 18 18\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M16.3327 6.01341V2.98675C16.3327 2.04675 15.906 1.66675 14.846 1.66675H12.1527C11.0927 1.66675 10.666 2.04675 10.666 2.98675V6.00675C10.666 6.95341 11.0927 7.32675 12.1527 7.32675H14.846C15.906 7.33341 16.3327 6.95341 16.3327 6.01341Z\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"1.5\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M16.3327 15.18V12.4867C16.3327 11.4267 15.906 11 14.846 11H12.1527C11.0927 11 10.666 11.4267 10.666 12.4867V15.18C10.666 16.24 11.0927 16.6667 12.1527 16.6667H14.846C15.906 16.6667 16.3327 16.24 16.3327 15.18Z\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"1.5\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M7.33268 6.01341V2.98675C7.33268 2.04675 6.90602 1.66675 5.84602 1.66675H3.15268C2.09268 1.66675 1.66602 2.04675 1.66602 2.98675V6.00675C1.66602 6.95341 2.09268 7.32675 3.15268 7.32675H5.84602C6.90602 7.33341 7.33268 6.95341 7.33268 6.01341Z\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"1.5\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M7.33268 15.18V12.4867C7.33268 11.4267 6.90602 11 5.84602 11H3.15268C2.09268 11 1.66602 11.4267 1.66602 12.4867V15.18C1.66602 16.24 2.09268 16.6667 3.15268 16.6667H5.84602C6.90602 16.6667 7.33268 16.24 7.33268 15.18Z\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"1.5\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n  </svg>\r\n</template>\r\n","<template>\r\n  <svg\r\n    width=\"16\"\r\n    height=\"15\"\r\n    viewBox=\"0 0 16 15\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M15 7.11108H1\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"2\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M15 1H1\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"2\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M15 13.2222H1\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"2\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n  </svg>\r\n</template>\r\n"],"version":3}