{"file":"shop-area-C5aVbQff.js","mappings":"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","names":["_ssrRenderAttrs","_mergeProps","_unref","activeFilters","full_width","shop_1600","shop_right_side","shop_no_side","_ssrInterpolate","_ssrRenderList","_ssrRenderClass"],"sources":["../../../../components/shop/sidebar/index.vue","../../../../components/shop/active-filters.vue","../../../../components/shop/shop-area.vue"],"sourcesContent":["<template>\n  <div class=\"tp-shop-sidebar mr-10\">\n    <!-- filter -->\n    <div class=\"tp-shop-widget mb-35\">\n      <h3 class=\"tp-shop-widget-title no-border\">Fiyat Filtresi</h3>\n      <!-- price filter start -->\n      <shop-sidebar-price-filter/>\n      <!-- price filter end -->\n    </div>\n    <!-- status -->\n    <div class=\"tp-shop-widget mb-50\">\n      <h3 class=\"tp-shop-widget-title\">Ürün Durumu</h3>\n      <!-- filter status start -->\n      <shop-sidebar-filter-status/>\n      <!-- filter status end -->\n    </div>\n    <!-- categories -->\n    <div class=\"tp-shop-widget mb-50\">\n      <h3 class=\"tp-shop-widget-title\">Kategoriler</h3>\n      <!-- filter categories start -->\n      <shop-sidebar-filter-categories/>\n      <!-- filter categories end -->\n    </div>\n    <!-- product rating -->\n    <div class=\"tp-shop-widget mb-50\">\n      <h3 class=\"tp-shop-widget-title\">En Çok Beğenilen Ürünler</h3>\n      <!-- filter top-product start -->\n      <shop-sidebar-top-product />\n      <!-- filter top-product end -->\n    </div>\n    <!-- brand -->\n    <!-- <div class=\"tp-shop-widget mb-50\"> -->\n      <!-- <h3 class=\"tp-shop-widget-title\">Popüler Markalar</h3> -->\n      <!-- filter brand start -->\n      <!-- <shop-sidebar-filter-brand/> -->\n      <!-- filter brand end -->\n    <!-- </div> -->\n    <!-- reset filter start -->\n    <!-- <shop-sidebar-reset-filter/> -->\n    <!-- reset filter end -->\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n\n</script>\n","<template>\r\n  <div v-if=\"hasActiveFilters\" class=\"tp-shop-active-filters mb-30\">\r\n    <div class=\"tp-shop-active-filters-wrapper\">\r\n      <h4 class=\"tp-shop-active-filters-title\">Aktif Filtreler:</h4>\r\n      <div class=\"tp-shop-active-filters-list d-flex flex-wrap gap-2\">\r\n        <!-- Category Filter -->\r\n        <div v-if=\"activeFilters.category\" class=\"tp-shop-active-filter-item\">\r\n          <span class=\"tp-shop-active-filter-text\">{{ activeFilters.category }}</span>\r\n          <button \r\n            @click=\"removeFilter('category')\"\r\n            class=\"tp-shop-active-filter-remove\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"fa-solid fa-xmark\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Brand Filter -->\r\n        <div v-if=\"activeFilters.brand\" class=\"tp-shop-active-filter-item\">\r\n          <span class=\"tp-shop-active-filter-text\">Marka: {{ activeFilters.brand }}</span>\r\n          <button \r\n            @click=\"removeFilter('brand')\"\r\n            class=\"tp-shop-active-filter-remove\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"fa-solid fa-xmark\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Price Range Filter -->\r\n        <div v-if=\"activeFilters.priceRange\" class=\"tp-shop-active-filter-item\">\r\n          <span class=\"tp-shop-active-filter-text\">{{ activeFilters.priceRange }}</span>\r\n          <button \r\n            @click=\"removeFilter('price')\"\r\n            class=\"tp-shop-active-filter-remove\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"fa-solid fa-xmark\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Status Filter -->\r\n        <div v-if=\"activeFilters.status\" class=\"tp-shop-active-filter-item\">\r\n          <span class=\"tp-shop-active-filter-text\">{{ getStatusText(activeFilters.status) }}</span>\r\n          <button \r\n            @click=\"removeFilter('status')\"\r\n            class=\"tp-shop-active-filter-remove\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"fa-solid fa-xmark\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Gender Filter -->\r\n        <div v-if=\"activeFilters.gender\" class=\"tp-shop-active-filter-item\">\r\n          <span class=\"tp-shop-active-filter-text\">{{ getGenderText(activeFilters.gender) }}</span>\r\n          <button \r\n            @click=\"removeFilter('gender')\"\r\n            class=\"tp-shop-active-filter-remove\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"fa-solid fa-xmark\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Clear All Button -->\r\n        <div class=\"tp-shop-active-filter-clear\">\r\n          <button \r\n            @click=\"clearAllFilters\"\r\n            class=\"tp-shop-active-filter-clear-btn\"\r\n            type=\"button\"\r\n          >\r\n            Tüm Filtreleri Temizle\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\ninterface ActiveFiltersProps {\r\n  activeFilters: {\r\n    category?: string;\r\n    brand?: string;\r\n    priceRange?: string;\r\n    status?: string;\r\n    gender?: string;\r\n  };\r\n}\r\n\r\nconst props = defineProps<ActiveFiltersProps>();\r\nconst emit = defineEmits<{\r\n  removeFilter: [filterType: string];\r\n  clearAll: [];\r\n}>();\r\n\r\n// const categoryStore = useCategoryStore(); // Gerek yok, parent'tan gelen data kullanılıyor\r\n\r\nconst hasActiveFilters = computed(() => {\r\n  return Object.values(props.activeFilters).some(value => value !== undefined && value !== null && value !== '');\r\n});\r\n\r\nconst removeFilter = (filterType: string) => {\r\n  emit('removeFilter', filterType);\r\n};\r\n\r\nconst clearAllFilters = () => {\r\n  emit('clearAll');\r\n};\r\n\r\nconst getStatusText = (status: string) => {\r\n  const statusMap: { [key: string]: string } = {\r\n    'on-sale': 'İndirimli',\r\n    'in-stock': 'Stokta Var'\r\n  };\r\n  return statusMap[status] || status;\r\n};\r\n\r\nconst getGenderText = (gender: string) => {\r\n  const genderMap: { [key: string]: string } = {\r\n    'male': 'Erkek',\r\n    'female': 'Kadın',\r\n    'unisex': 'Unisex'\r\n  };\r\n  return genderMap[gender] || gender;\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tp-shop-active-filters {\r\n  border-bottom: 1px solid #e1e5e9;\r\n  padding-bottom: 25px;\r\n}\r\n\r\n.tp-shop-active-filters-title {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-bottom: 15px;\r\n  color: #010f1c;\r\n}\r\n\r\n.tp-shop-active-filters-list {\r\n  align-items: center;\r\n}\r\n\r\n.tp-shop-active-filter-item {\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #e1e5e9;\r\n  border-radius: 25px;\r\n  padding: 8px 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  font-size: 14px;\r\n  color: #55585b;\r\n}\r\n\r\n.tp-shop-active-filter-text {\r\n  font-weight: 500;\r\n}\r\n\r\n.tp-shop-active-filter-remove {\r\n  background: none;\r\n  border: none;\r\n  color: #ff6b35;\r\n  cursor: pointer;\r\n  padding: 2px;\r\n  border-radius: 50%;\r\n  width: 18px;\r\n  height: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.tp-shop-active-filter-remove:hover {\r\n  background-color: #ff6b35;\r\n  color: white;\r\n}\r\n\r\n.tp-shop-active-filter-remove i {\r\n  font-size: 10px;\r\n}\r\n\r\n.tp-shop-active-filter-clear-btn {\r\n  background: none;\r\n  border: 1px solid #ff6b35;\r\n  color: #ff6b35;\r\n  border-radius: 25px;\r\n  padding: 8px 16px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.tp-shop-active-filter-clear-btn:hover {\r\n  background-color: #ff6b35;\r\n  color: white;\r\n}\r\n</style>","<template>\n  <section\n    :class=\"`tp-shop-area pb-120 ${full_width ? 'tp-shop-full-width-padding' : ''}`\"\n  >\n    <div\n      :class=\"`${full_width? 'container-fluid': shop_1600? 'container-shop': 'container'}`\"\n    >\n      <div class=\"row\">\n        <div v-if=\"!shop_right_side && !shop_no_side\" class=\"col-xl-3 col-lg-4\">\n          <!-- shop sidebar start -->\n          <shop-sidebar />\n          <!-- shop sidebar end -->\n        </div>\n        <div :class=\"`${shop_no_side?'col-xl-12':'col-xl-9 col-lg-8'}`\">\n          <div class=\"tp-shop-main-wrapper\">\n            <!-- Active Filters -->\n            <shop-active-filters \n              :active-filters=\"activeFilters\"\n              @remove-filter=\"removeFilter\"\n              @clear-all=\"clearAllFilters\"\n            />\n            \n            <div class=\"tp-shop-top mb-45\">\n              <div class=\"row\">\n                <div class=\"col-xl-6\">\n                  <div class=\"tp-shop-top-left d-flex align-items-center\">\n                    <div class=\"tp-shop-top-tab tp-tab\">\n                      <ul class=\"nav nav-tabs\" id=\"productTab\" role=\"tablist\">\n                        <li class=\"nav-item\" role=\"presentation\">\n                          <button\n                            :class=\"`nav-link ${active_tab === 'grid' ? 'active' : ''}`\"\n                            @click=\"handleActiveTab('grid')\"\n                          >\n                            <svg-grid />\n                          </button>\n                        </li>\n                        <li class=\"nav-item\" role=\"presentation\">\n                          <button\n                            :class=\"`nav-link ${active_tab === 'list' ? 'active' : ''}`\"\n                            @click=\"handleActiveTab('list')\"\n                          >\n                            <svg-list />\n                          </button>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"tp-shop-top-result\">\n                      <p>\n                        {{ productStore.meta.total > 0 ? `${startIndex + 1}–${Math.min(endIndex, productStore.meta.total)} arası gösteriliyor, toplam ${productStore.meta.total} sonuç` : 'Sonuç bulunamadı' }}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-xl-6\">\n                  <shop-sidebar-filter-select\n                    @handle-select-filter=\"filterStore.handleSelectFilter\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"tp-shop-items-wrapper tp-shop-item-primary\">\n              <!-- Loading State -->\n              <div v-if=\"productStore.isLoading\" class=\"text-center py-5\">\n                <div class=\"spinner-border\" role=\"status\">\n                  <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <p class=\"mt-2\">Ürünler yükleniyor...</p>\n              </div>\n\n              <!-- Error State -->\n              <div v-else-if=\"productStore.error\" class=\"alert alert-danger\" role=\"alert\">\n                {{ productStore.error }}\n                <button @click=\"loadProducts\" class=\"btn btn-sm btn-outline-danger ms-2\">\n                  Tekrar Dene\n                </button>\n              </div>\n\n              <!-- Grid View -->\n              <div v-else-if=\"active_tab === 'grid'\">\n                <div class=\"row infinite-container\">\n                  <div\n                    v-for=\"item in productStore.products?.slice(startIndex, endIndex)\"\n                    :key=\"item.id\"\n                    class=\"col-xl-4 col-md-6 col-sm-6 infinite-item\"\n                  >\n                    <ProductElectronicsItem\n                      :item=\"item\"\n                      :spacing=\"true\"\n                    />\n                  </div>\n                  \n                  <!-- No Products -->\n                  <div v-if=\"!productStore.products?.length\" class=\"col-12 text-center py-5\">\n                    <p>Ürün bulunamadı.</p>\n                  </div>\n                </div>\n              </div>\n\n              <!-- List View -->\n              <div v-else-if=\"active_tab === 'list'\">\n                <div class=\"row\">\n                  <div class=\"col-xl-12\">\n                    <div\n                      v-for=\"item in productStore.products?.slice(startIndex, endIndex)\"\n                      :key=\"item.id\"\n                    >\n                      <ProductElectronicsItem\n                        :item=\"item\"\n                        :list-style=\"true\"\n                      />\n                    </div>\n                    \n                    <!-- No Products -->\n                    <div v-if=\"!productStore.products?.length\" class=\"text-center py-5\">\n                      <p>No products found.</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"tp-shop-pagination mt-20\">\n              <div\n                v-if=\"productStore.products && productStore.products.length > 20\"\n                class=\"tp-pagination\"\n              >\n                <ui-pagination\n                  :items-per-page=\"20\"\n                  :data=\"productStore.products || []\"\n                  @handle-paginate=\"handlePagination\"\n                />\n              </div>\n              \n              <!-- API-based pagination for future implementation -->\n              <div v-if=\"productStore.meta && productStore.meta.last_page > 1\" class=\"tp-pagination\">\n                <nav aria-label=\"Shop pagination\">\n                  <ul class=\"pagination justify-content-center\">\n                    <li :class=\"`page-item ${productStore.meta.current_page === 1 ? 'disabled' : ''}`\">\n                      <button @click=\"loadPage(productStore.meta.current_page - 1)\" class=\"page-link\">Previous</button>\n                    </li>\n                    <li \n                      v-for=\"page in getVisiblePages()\" \n                      :key=\"page\" \n                      :class=\"`page-item ${productStore.meta.current_page === page ? 'active' : ''}`\"\n                    >\n                      <button @click=\"loadPage(page)\" class=\"page-link\">{{ page }}</button>\n                    </li>\n                    <li :class=\"`page-item ${productStore.meta.current_page === productStore.meta.last_page ? 'disabled' : ''}`\">\n                      <button @click=\"loadPage(productStore.meta.current_page + 1)\" class=\"page-link\">Next</button>\n                    </li>\n                  </ul>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div v-if=\"shop_right_side && !shop_no_side\" class=\"col-xl-3 col-lg-4\">\n          <!-- shop sidebar start -->\n          <shop-sidebar />\n          <!-- shop sidebar end -->\n        </div>\n\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { useProductStore } from \"@/pinia/useProductStore\";\nimport { useProductFilterStore } from \"@/pinia/useProductFilterStore\";\nimport { useCategoryStore } from \"@/pinia/useCategoryStore\";\n\nconst route = useRoute();\nconst router = useRouter();\nconst productStore = useProductStore();\nconst filterStore = useProductFilterStore();\nconst categoryStore = useCategoryStore();\n\nconst props = defineProps<{\n  list_style?: boolean;\n  full_width?: boolean;\n  shop_1600?: boolean;\n  shop_right_side?: boolean;\n  shop_no_side?: boolean;\n}>();\n\nconst active_tab = ref<string>(props.list_style ? \"list\" : \"grid\");\nlet startIndex = ref<number>(0);\nlet endIndex = ref<number>(20);\n\n// Active filters computed\nconst activeFilters = computed(() => {\n  const filters: any = {};\n  \n  // Kategori filtresi - query parametrelerinden ve route parametrelerinden kontrol et\n  let categorySlug = '';\n  if (route.query.category || route.query.subCategory) {\n    categorySlug = (route.query.category || route.query.subCategory) as string;\n  } else if (route.params.slug && (route.path.startsWith('/kategori/') || route.path.startsWith('/alt-kategori/'))) {\n    categorySlug = route.params.slug as string;\n  }\n  \n  if (categorySlug && categoryStore.categories.length > 0) {\n    const category = categoryStore.categories.find(cat => cat.slug === categorySlug);\n    if (category) {\n      filters.category = category.name;\n    } else {\n      // Slug'dan kategori adı oluştur (fallback)\n      filters.category = categorySlug.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    }\n  }\n  \n  if (route.query.brand) {\n    filters.brand = route.query.brand;\n  }\n  \n  if (route.query.minPrice && route.query.maxPrice) {\n    filters.priceRange = `₺${route.query.minPrice} - ₺${route.query.maxPrice}`;\n  }\n  \n  if (route.query.status) {\n    filters.status = route.query.status;\n  }\n  \n  if (route.query.gender) {\n    filters.gender = route.query.gender;\n  }\n  \n  return filters;\n});\n\nconst loadProducts = async () => {\n  const filters: any = {\n    per_page: 20,\n    currency: 'TRY'\n  };\n\n  // Check for category in URL query or route params\n  if (route.query.category) {\n    const categorySlug = route.query.category as string;\n    // Find category by slug and use its ID\n    const category = categoryStore.categories.find(cat => cat.slug === categorySlug);\n    if (category) {\n      filters.category_id = category.id;\n    } else {\n      // Fallback to search if category not found\n      filters.search = categorySlug.replace(/-/g, ' ');\n    }\n  }\n  \n  if (route.query.subCategory) {\n    const subCategorySlug = route.query.subCategory as string;\n    // Find subcategory by slug and use its ID\n    const subCategory = categoryStore.categories.find(cat => cat.slug === subCategorySlug);\n    if (subCategory) {\n      filters.category_id = subCategory.id;\n    } else {\n      // Fallback to search if subcategory not found\n      filters.search = subCategorySlug.replace(/-/g, ' ');\n    }\n  }\n  \n  // Check for category in route params (for /kategori/[slug] pages)\n  if (route.params.slug && (route.path.startsWith('/kategori/') || route.path.startsWith('/alt-kategori/'))) {\n    const categorySlug = route.params.slug as string;\n    const category = categoryStore.categories.find(cat => cat.slug === categorySlug);\n    if (category) {\n      filters.category_id = category.id;\n    } else {\n      filters.search = categorySlug.replace(/-/g, ' ');\n    }\n  }\n\n  // Price filter support\n  if (route.query.minPrice && route.query.maxPrice) {\n    filters.min_price = Number(route.query.minPrice);\n    filters.max_price = Number(route.query.maxPrice);\n  }\n\n  // Status filter support\n  if (route.query.status) {\n    if (route.query.status === 'on-sale') {\n      filters.featured = 1; // API 1 veya 0 değeri bekliyor\n    } else if (route.query.status === 'in-stock') {\n      filters.in_stock = 1;\n    }\n  }\n\n  // Brand filter support\n  if (route.query.brand) {\n    filters.brand = route.query.brand;\n  }\n\n  // Sorting support\n  if (route.query.sort) {\n    const sortValue = route.query.sort as string;\n    switch (sortValue) {\n      case 'low-to-high':\n        filters.sort = 'price';\n        filters.order = 'asc';\n        break;\n      case 'high-to-low':\n        filters.sort = 'price';\n        filters.order = 'desc';\n        break;\n      case 'new-added':\n        filters.sort = 'created_at';\n        filters.order = 'desc';\n        break;\n      case 'on-sale':\n        filters.featured = 1;\n        filters.sort = 'price';\n        filters.order = 'asc';\n        break;\n      default:\n        // default-sorting - no specific sorting\n        break;\n    }\n  }\n\n  await productStore.fetchProducts(filters);\n};\n\nconst handlePagination = (data: any[], start: number, end: number) => {\n  startIndex.value = start;\n  endIndex.value = end;\n};\n\nfunction handleActiveTab(tab: string) {\n  active_tab.value = tab;\n}\n\n// Handle sort filter selection\nconst handleSelectFilter = (e: { value: string; text: string }) => {\n  // This will be handled by the filter-select component's URL update\n  // and the watcher will automatically reload products\n};\n\n// Remove single filter\nconst removeFilter = (filterType: string) => {\n  const currentQuery = { ...route.query };\n  \n  switch (filterType) {\n    case 'category':\n      delete currentQuery.category;\n      delete currentQuery.subCategory;\n      // Eğer kategori route parametresi varsa ana shop sayfasına yönlendir\n      if (route.params.slug && (route.path.startsWith('/kategori/') || route.path.startsWith('/alt-kategori/'))) {\n        router.push({\n          path: '/shop',\n          query: currentQuery,\n        });\n        return;\n      }\n      break;\n    case 'brand':\n      delete currentQuery.brand;\n      break;\n    case 'price':\n      delete currentQuery.minPrice;\n      delete currentQuery.maxPrice;\n      break;\n    case 'status':\n      delete currentQuery.status;\n      break;\n    case 'gender':\n      delete currentQuery.gender;\n      break;\n  }\n  \n  router.push({\n    path: route.path,\n    query: currentQuery,\n  });\n};\n\n// Clear all filters\nconst clearAllFilters = () => {\n  // Eğer kategori route parametresi varsa ana shop sayfasına yönlendir\n  if (route.params.slug && (route.path.startsWith('/kategori/') || route.path.startsWith('/alt-kategori/'))) {\n    router.push({\n      path: '/shop',\n      query: {},\n    });\n  } else {\n    router.push({\n      path: route.path,\n      query: {},\n    });\n  }\n};\n\nconst loadPage = async (page: number) => {\n  if (page < 1 || page > productStore.meta.last_page) return;\n  \n  const filters: any = {\n    page,\n    per_page: 20,\n    currency: 'TRY'\n  };\n\n  // Include all current filters in pagination\n  if (route.query.minPrice && route.query.maxPrice) {\n    filters.min_price = Number(route.query.minPrice);\n    filters.max_price = Number(route.query.maxPrice);\n  }\n\n  if (route.query.status) {\n    if (route.query.status === 'on-sale') {\n      filters.featured = 1;\n    } else if (route.query.status === 'in-stock') {\n      filters.in_stock = 1;\n    }\n  }\n\n  if (route.query.brand) {\n    filters.brand = route.query.brand;\n  }\n\n  // Include sorting in pagination\n  if (route.query.sort) {\n    const sortValue = route.query.sort as string;\n    switch (sortValue) {\n      case 'low-to-high':\n        filters.sort = 'price';\n        filters.order = 'asc';\n        break;\n      case 'high-to-low':\n        filters.sort = 'price';\n        filters.order = 'desc';\n        break;\n      case 'new-added':\n        filters.sort = 'created_at';\n        filters.order = 'desc';\n        break;\n      case 'on-sale':\n        filters.featured = 1;\n        filters.sort = 'price';\n        filters.order = 'asc';\n        break;\n    }\n  }\n\n  await productStore.fetchProducts(filters);\n};\n\nconst getVisiblePages = () => {\n  const current = productStore.meta.current_page;\n  const total = productStore.meta.last_page;\n  const pages = [];\n  \n  // Simple pagination logic - show 5 pages around current\n  const start = Math.max(1, current - 2);\n  const end = Math.min(total, current + 2);\n  \n  for (let i = start; i <= end; i++) {\n    pages.push(i);\n  }\n  \n  return pages;\n};\n\n// Load categories and products on mount\nonMounted(async () => {\n  // Load categories first if not already loaded\n  if (!categoryStore.hasCategories && !categoryStore.isLoading) {\n    await categoryStore.fetchCategoriesWithChildren();\n  }\n  await loadProducts();\n});\n\n// Watch for route query changes (for filters, sorting, etc.)\nwatch(() => route.query, async () => {\n  await loadProducts();\n  startIndex.value = 0;\n  endIndex.value = Math.min(20, productStore.products?.length || 0);\n}, { deep: true });\n\n// Watch for product store changes to update pagination\nwatch(\n  () => productStore.products,\n  (newProducts) => {\n    if (newProducts) {\n      endIndex.value = Math.min(20, newProducts.length);\n    }\n  }\n);\n</script>\n"],"version":3}