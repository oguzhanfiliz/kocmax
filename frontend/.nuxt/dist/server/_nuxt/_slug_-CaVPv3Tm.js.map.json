{"file":"_slug_-CaVPv3Tm.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,UAAM,QAAQ,SAAA;AACd,UAAM,gBAAgB,iBAAA;AAGD,UAAM,OAAO;AAGlC,UAAM,eAAe,IAAY,EAAE;AACnC,UAAM,sBAAsB,IAAY,EAAE;AAoC1C,UAAM,MAAM,MAAM,OAAO,MAAM,OAAO,YAAY;AAChD,UAAI,SAAS;AAEX,cAAM,WAAW,cAAc,WAAW;AAAA,UAAK,CAAA,QAC7C,IAAI,SAAS,WACb,IAAI,KAAK,YAAA,EAAc,QAAQ,cAAc,GAAG,EAAE,QAAQ,OAAO,GAAG,MAAM;AAAA,QAAA;AAG5E,YAAI,UAAU;AACZ,uBAAa,QAAQ,SAAS;AAC9B,8BAAoB,QAAQ,SAAS,eAAe,GAAG,SAAS,IAAI;AAAA,QACtE;AAAA,MACF;AAAA,IACF,CAAC;AAGD,eAAW;AAAA,MACT,OAAO,SAAS,MAAM,aAAa,QAAQ,GAAG,aAAa,KAAK,kBAAkB,kBAAkB;AAAA,MACpG,aAAa,SAAS,MAAM,oBAAoB,SAAS,8BAA8B;AAAA,IAAA,CACxF;;;;;;QA7EM,OAAOA,MAAA,YAAA,KAAY;AAAA,QACnB,UAAUA,MAAA,mBAAA,KAAmB;AAAA,MAAA;;;;;;;;;;;;","names":["_unref"],"sources":["../../../../pages/kategori/[slug].vue"],"sourcesContent":["<template>\n  <div>\n    <!-- breadcrumb start -->\n    <breadcrumb-1 \n      :title=\"categoryName || 'Kategori'\" \n      :subtitle=\"categoryDescription || 'Kategori Ürünleri'\" \n    />\n    <!-- breadcrumb end -->\n\n    <!-- shop area start -->\n    <shop-area/>\n    <!-- shop area end -->\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useCategoryStore } from \"@/pinia/useCategoryStore\";\n\nconst route = useRoute();\nconst categoryStore = useCategoryStore();\n\n// Get category slug from route\nconst categorySlug = route.params.slug as string;\n\n// Reactive category data\nconst categoryName = ref<string>('');\nconst categoryDescription = ref<string>('');\n\n// Load categories and find current category\nonMounted(async () => {\n  if (!categoryStore.hasCategories) {\n    await categoryStore.fetchCategoriesWithChildren();\n  }\n  \n  // Find category by slug\n  const category = categoryStore.categories.find(cat => \n    cat.slug === categorySlug || \n    cat.name.toLowerCase().replace(/[^a-z0-9]/g, \"-\").replace(/-+/g, \"-\") === categorySlug\n  );\n  \n  if (category) {\n    categoryName.value = category.name;\n    categoryDescription.value = category.description || `${category.name} Kategorisi`;\n  } else {\n    // If not found in main categories, search in children\n    for (const parentCat of categoryStore.rootCategories) {\n      if (parentCat.children) {\n        const childCategory = parentCat.children.find(child => \n          child.slug === categorySlug || \n          child.name.toLowerCase().replace(/[^a-z0-9]/g, \"-\").replace(/-+/g, \"-\") === categorySlug\n        );\n        if (childCategory) {\n          categoryName.value = childCategory.name;\n          categoryDescription.value = childCategory.description || `${childCategory.name} Kategorisi`;\n          break;\n        }\n      }\n    }\n  }\n});\n\n// Watch for route changes\nwatch(() => route.params.slug, async (newSlug) => {\n  if (newSlug) {\n    // Re-find category when slug changes\n    const category = categoryStore.categories.find(cat => \n      cat.slug === newSlug || \n      cat.name.toLowerCase().replace(/[^a-z0-9]/g, \"-\").replace(/-+/g, \"-\") === newSlug\n    );\n    \n    if (category) {\n      categoryName.value = category.name;\n      categoryDescription.value = category.description || `${category.name} Kategorisi`;\n    }\n  }\n});\n\n// SEO Meta\nuseSeoMeta({ \n  title: computed(() => categoryName.value ? `${categoryName.value} - Kategorisi` : 'Kategori Sayfası'),\n  description: computed(() => categoryDescription.value || 'Kategori ürünlerini keşfedin')\n});\n</script>\n\n"],"version":3}