{"file":"login-form-vXX4FTKF.js","mappings":";;;;;;;;;;;;AA2EA,UAAM,YAAY,aAAA;AAClB,UAAM,SAAS,UAAA;AAEf,QAAI,WAAW,IAAa,KAAK;AAOjC,UAAM,EAAE,QAAQ,cAAc,kBAAkB,UAAA,IAC9C,QAAqB;AAAA,MACnB,kBAAkB,IAAI,OAAO;AAAA,QAC3B,OAAO,IAAI,SAAS,WAAW,MAAA,EAAQ,MAAM,OAAO;AAAA,QACpD,UAAU,IAAI,SAAS,SAAA,EAAW,IAAI,CAAC,EAAE,MAAM,UAAU;AAAA,MAAA,CAC1D;AAAA,IAAA,CACF;AAEc,iBAAa,OAAO,WAAW;AAC9C,UAAI;AACF,cAAM,SAAS,MAAM,UAAU,MAAM;AAAA,UACnC,OAAO,OAAO;AAAA,UACd,UAAU,OAAO;AAAA,UACjB,aAAa;AAAA,QAAA,CACd;AAED,YAAI,iCAAQ,SAAS;AACnB,gBAAM,QAAQ,OAAO,WAAW,iBAAiB;AACjD,oBAAA;AAGA,gBAAM,OAAO,KAAK,GAAG;AAAA,QACvB,OAAO;AACL,gBAAM,OAAM,iCAAQ,YAAW,iBAAiB;AAAA,QAClD;AAAA,MACF,SAAS,OAAY;AACnB,cAAM,OAAM,+BAAO,YAAW,iBAAiB;AAAA,MACjD;AAAA,IACF,CAAC;AAMD,UAAM,QAAQ,iBAAiB,OAAO;AACtC,UAAM,WAAW,iBAAiB,UAAU;;;;;;;QAlHhC,IAAG;AAAA,QACH,MAAK;AAAA,QACL,aAAY;AAAA,MAAA,GACJA,MAAA,KAAA,CAAK,CAAA;;QAMH,KAAKA,MAAA,MAAA,EAAO;AAAA,MAAA;;QAMpB,IAAG;AAAA,QACF,MAAMA,MAAA,QAAA,IAAQ,SAAA;AAAA,QACf,MAAK;AAAA,QACL,aAAY;AAAA,MAAA,GACJA,MAAA,QAAA,CAAQ,CAAA,CAAA,0FAAA;UAKAA,MAAA,QAAA,GAAQ;;;;;;;QAYhB,KAAKA,MAAA,MAAA,EAAO;AAAA,MAAA;;AAWf,YAAAC,mBAAA,sBAAA,EAAA,MAAK,aAAS;AAAA,yBAAzB,CAAsD,GAAAC,QAAAC,UAAA,aAAA;;;;;8BAA5B,kBAAgB;AAAA,YAAA;AAAA;;;;AAO/B,YAAA,4FAAAC,sBAAAJ,MAAA,SAAA,EAAU,SAAS,IAAA,cAAA,EAAA,GAAA;AAElB,UAAAA,MAAA,SAAA,EAAU,WAAS;;;;;;;;;;;;;;;","names":["_unref","_ssrRenderComponent","_push","_parent","_ssrIncludeBooleanAttr"],"sources":["../../../../components/forms/login-form.vue"],"sourcesContent":["<template>\r\n  <form @submit=\"onSubmit\">\r\n    <div class=\"tp-login-input-wrapper\">\r\n      <div class=\"tp-login-input-box\">\r\n        <div class=\"tp-login-input\">\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"shofy@mail.com\"\r\n            v-bind=\"email\"\r\n          />\r\n        </div>\r\n        <div class=\"tp-login-input-title\">\r\n          <label for=\"email\">Your Email</label>\r\n        </div>\r\n        <err-message :msg=\"errors.email\" />\r\n      </div>\r\n      <div class=\"tp-login-input-box\">\r\n        <div class=\"p-relative\">\r\n          <div class=\"tp-login-input\">\r\n            <input\r\n              id=\"tp_password\"\r\n              :type=\"showPass ? 'text' : 'password'\"\r\n              name=\"password\"\r\n              placeholder=\"Min. 6 character\"\r\n              v-bind=\"password\"\r\n            />\r\n          </div>\r\n          <div class=\"tp-login-input-eye\" id=\"password-show-toggle\">\r\n            <span class=\"open-eye\" @click=\"togglePasswordVisibility\">\r\n              <template v-if=\"showPass\">\r\n                <svg-open-eye />\r\n              </template>\r\n              <template v-else>\r\n                <svg-close-eye />\r\n              </template>\r\n            </span>\r\n          </div>\r\n          <div class=\"tp-login-input-title\">\r\n            <label for=\"tp_password\">Password</label>\r\n          </div>\r\n        </div>\r\n        <err-message :msg=\"errors.password\" />\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"tp-login-suggetions d-sm-flex align-items-center justify-content-between mb-20\"\r\n    >\r\n      <div class=\"tp-login-remeber\">\r\n        <input id=\"remeber\" type=\"checkbox\" />\r\n        <label for=\"remeber\">Remember me</label>\r\n      </div>\r\n      <div class=\"tp-login-forgot\">\r\n        <nuxt-link href=\"/forgot\">Forgot Password?</nuxt-link>\r\n      </div>\r\n    </div>\r\n    <div class=\"tp-login-bottom\">\r\n      <button \r\n        type=\"submit\" \r\n        class=\"tp-login-btn w-100\"\r\n        :disabled=\"authStore.isLoading\"\r\n      >\r\n        <span v-if=\"authStore.isLoading\">Giriş yapılıyor...</span>\r\n        <span v-else>Login</span>\r\n      </button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { useForm } from \"vee-validate\";\r\nimport { useAuthStore } from \"~/pinia/useAuthStore\";\r\nimport { toast } from 'vue3-toastify';\r\nimport * as yup from \"yup\";\r\n\r\nconst authStore = useAuthStore();\r\nconst router = useRouter();\r\n\r\nlet showPass = ref<boolean>(false);\r\n\r\ninterface IFormValues {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst { errors, handleSubmit, defineInputBinds, resetForm } =\r\n  useForm<IFormValues>({\r\n    validationSchema: yup.object({\r\n      email: yup.string().required().email().label(\"Email\"),\r\n      password: yup.string().required().min(6).label(\"Password\"),\r\n    }),\r\n  });\r\n\r\nconst onSubmit = handleSubmit(async (values) => {\r\n  try {\r\n    const result = await authStore.login({\r\n      email: values.email,\r\n      password: values.password,\r\n      device_name: 'web_browser'\r\n    });\r\n\r\n    if (result?.success) {\r\n      toast.success(result.message || 'Giriş başarılı!');\r\n      resetForm();\r\n      \r\n      // Redirect to dashboard or home\r\n      await router.push('/');\r\n    } else {\r\n      toast.error(result?.message || 'Giriş başarısız');\r\n    }\r\n  } catch (error: any) {\r\n    toast.error(error?.message || 'Bir hata oluştu');\r\n  }\r\n});\r\n\r\nconst togglePasswordVisibility = () => {\r\n  showPass.value = !showPass.value;\r\n};\r\n\r\nconst email = defineInputBinds(\"email\");\r\nconst password = defineInputBinds(\"password\");\r\n</script>\r\n"],"version":3}